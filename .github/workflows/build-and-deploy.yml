name: Build docker image

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      image: ${{ fromJSON(steps.push.outputs.metadata)['image.name'] }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get lowercase repository name
        run: |
          echo "REPOSITORY=${REPOSITORY,,}" >> ${GITHUB_ENV}
        env:
          REPOSITORY: '${{ github.repository }}'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPOSITORY }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cloudflared
        run: |
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          chmod +x cloudflared

      - name: Install nomad
        run: |
          curl -L https://releases.hashicorp.com/nomad/1.9.6/nomad_1.9.6_linux_amd64.zip -o nomad.zip
          unzip nomad.zip
          chmod +x nomad

      - name: Run cloudflared tunnel
        env:
          TUNNEL_SERVICE_TOKEN_ID: ${{ secrets.TUNNEL_SERVICE_TOKEN_ID }}
          TUNNEL_SERVICE_TOKEN_SECRET: ${{ secrets.TUNNEL_SERVICE_TOKEN_SECRET }}
        run: |
          nohup ./cloudflared access tcp --hostname ${{ vars.NOMAD_CF_HOSTNAME }} --url localhost:4646 &

      - name: Deploy
        timeout-minutes: 5
        env:
          NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
        run: |
          ./nomad job run -var image=${{ needs.build.outputs.image }} ci/job.nomad

      - name: Stop cloudflared tunnel
        run: |
          pkill cloudflared
